# Unbind all keys
# http://unix.stackexchange.com/questions/57641/reload-of-tmux-config-not-unbinding-keys-bind-key-is-cumulative
unbind-key -a

# Set the terminal type so colors get rendered correctly
set -g default-terminal "screen-256color"

# Powerline settings
set -g status on
set -g status-interval 2
set -g status-utf8 on
set -g status-justify "centre"
set -g status-left-length 100
set -g status-right-length 100
set -g status-left "#(~/.dotfiles/.tmux/tmux-powerline/powerline.sh left)"
set -g status-right "#(~/.dotfiles/.tmux/tmux-powerline/powerline.sh right)"
set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"

# History setting
set -g history-limit 1000000

set -g default-shell $SHELL

# Make switching to cmd mode in zsh quick!
set -s escape-time 0

# vi-style controls in copy mode
set -g status-keys vi
setw -g mode-keys vi

# Set the prefix key to Ctrl-z
set -g prefix C-z

# Load the solarized color theme
source ~/.dotfiles/.tmux/tmux-colors-solarized/tmuxcolors-256.conf

# Reload tmux config
bind r source-file ~/.tmux.conf; display 'Config reloaded'
bind ^R source-file ~/.tmux.conf; display 'Config reloaded'

# Sane scrolling
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g terminal-overrides '\*:smcup@:rmcup@'

# Ctrl keys deals with panes

# Ctrl-[VS]: Split panes
bind v split-window -h
bind ^V split-window -h
bind s split-window -v
bind ^S split-window -v

# Ctrl-[HJKL]: Switch panes
bind -r ^H select-pane -L
bind -r ^L select-pane -R
bind -r ^J select-pane -U
bind -r ^K select-pane -D

# Ctrl-Z: Switch to last pane
bind C-Z last-pane

# Alt-Shift keys generally deal with windows

# Alt-Shift-[HJ]: Previous window
bind -n M-H prev
bind -n M-J prev
# Alt-Shift-[KL]: Next window
bind -n M-K next
bind -n M-L next
# Alt-Shift-N: New window
bind -n M-N new-window
# Alt-Shift-;: Last window
bind -n M-: last-window

# Ctrl-Space: Copy mode
bind Space copy-mode
bind C-Space copy-mode

# Copy mode behaves more like vim
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy V rectangle-toggle
bind x paste-buffer
bind C-x paste-buffer
# Move x clipboard into tmux paste buffer
# bind C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"
# Move tmux copy buffer into x clipboard
bind C-c run "tmux show-buffer | xclip -i -selection clipboard"

# Mouse mode
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Make Ctrl-Left and Ctrl-Right work as Prev/Next word in terminal
unbind -n C-Left
unbind -n C-Right
setw -g xterm-keys on

# Toggle mouse on with ^B m
bind m \
  set -g mode-mouse on \;\
  set -g mouse-resize-pane on \;\
  set -g mouse-select-pane on \;\
  set -g mouse-select-window on \;\
  display 'Mouse: ON'

# Toggle mouse off with ^B M
bind M \
  set -g mode-mouse off \;\
  set -g mouse-resize-pane off \;\
  set -g mouse-select-pane off \;\
  set -g mouse-select-window off \;\
  display 'Mouse: OFF'

# Bind Enter to window zooming: http://superuser.com/questions/238702/maximizing-a-pane-in-tmux
bind Enter run "~/.dotfiles/.tmux/zoom"

unbind =
bind = \
  new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
  swap-pane -s tmux-zoom.0 \;\
  select-window -t tmux-zoom

unbind -
bind - \
  last-window \;\
  swap-pane -s tmux-zoom.0 \;\
  kill-window -t tmux-zoom

# Bind [ and ] to some common used layout
bind [ select-layout even-horizontal
bind ] select-layout even-vertical
